#+TITLE: DOCs NavBar Component
#+AUTHOR: Kyonax - Cristian Moreno
#+auto_tangle: t

This DOC file has all the code and explanation of it, follow the Descriptions to understand what the NavBarComponent do. Typescript & CSS.

* Table of Contents :toc:
- [[#tsx-component][TSX Component]]
  - [[#imports][Imports]]
  - [[#state-variables--functions][State Variables & Functions]]
  - [[#end-of-code][End of Code]]

* TSX Component
The NavBar Component will be our navigation tool in the Landing page ~path: we-love-kits/src/components/nav_bar~

** Imports
#+BEGIN_SRC typescript :tangle ./component.tsx
import Link from 'next/link';
import { useState, useEffect } from 'react';
#+END_SRC

Import some libraries ~heroicons~ and ~react-social-icons~, libraries for icons:

#+BEGIN_SRC typescript :tangle ./component.tsx
import { Bars3Icon, XMarkIcon } from '@heroicons/react/24/outline';
import { SocialIcon } from 'react-social-icons';
#+END_SRC

Import CSS Styles for the NavBar:

#+BEGIN_SRC typescript :tangle ./component.tsx
import './nav_bar.css';
#+END_SRC

** State Variables & Functions

This is our default function of the NavBar Component, scripts and backend code will be writed before the ~return~ (the rendering process):

#+BEGIN_SRC typescript :tangle ./component.tsx
export default function NavBarComponent() {
    const [nav, setNav] = useState(false);
    const handleClick = () => setNav(!nav);
#+END_SRC

This ~state variable~ and ~function variable (handleClick)~ are the Triggereds of the navbar in the mobile version. Mobile version goes from ~300px~ to ~768px~.

#+BEGIN_SRC typescript :tangle no
const [nav, setNav] = useState(false);
const handleClick = () => setNav(!nav);
#+END_SRC

** End of Code

#+BEGIN_SRC typescript :tangle ./component.tsx
    return( <> </> )
}
#+END_SRC
